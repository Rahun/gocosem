package gocosem

import (
	"bytes"
	"testing"
)

func TestX__PrintData(t *testing.T) {
	b := []byte{0x01, 0x01, 0x02, 0x04, 0x02, 0x04, 0x12, 0x00, 0x08, 0x09, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0xFF, 0x0F, 0x02, 0x12, 0x00, 0x00, 0x09, 0x0C, 0x07, 0xE0, 0x02, 0x16, 0x01, 0x04, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x09, 0x0C, 0x07, 0xE0, 0x02, 0x16, 0x01, 0x05, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00}

	data := new(DlmsData)
	err := data.Decode(bytes.NewBuffer(b))
	if nil != err {
		t.Fatalf("data.Decode() failed: %v", err)
	}
	t.Logf("data: %s", data.Print())

	b = []byte{0x01, 0x01, 0x02, 0x04, 0x02, 0x04, 0x12, 0x00, 0x08, 0x09, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0xFF, 0x0F, 0x02, 0x12, 0x00, 0x00, 0x09, 0x0C, 0x00, 0x00, 0x02, 0x16, 0x01, 0x04, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x09, 0x0C, 0x00, 0x00, 0x02, 0x15, 0x01, 0x05, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00}
	err = data.Decode(bytes.NewBuffer(b))
	if nil != err {
		t.Fatalf("data.Decode() failed: %v", err)
	}
	t.Logf("data: %s", data.Print())

}

func TestX__PrintDateTime(t *testing.T) {
	b := []byte{0x07, 0xE0, 0x02, 0x16, 0x01, 0x04, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00}
	dateTime := DlmsDateTimeFromBytes(b)
	t.Logf("dateTime: %s", dateTime.PrintDateTime())

	b = []byte{0x07, 0xE0, 0x02, 0x16, 0x01, 0x05, 0x10, 0x27, 0x00, 0x00, 0x00, 0x00}
	dateTime = DlmsDateTimeFromBytes(b)
	t.Logf("dateTime: %s", dateTime.PrintDateTime())

	b = []byte{0xDF, 0x07, 0x0A, 0x0D, 0xFF, 0x10, 0x2D, 0x00, 0xFF, 0xDF, 0x07, 0x00}
	dateTime = DlmsDateTimeFromBytes(b)
	t.Logf("dateTime: %s", dateTime.PrintDateTime())

	b = []byte{0xDF, 0x07, 0x0A, 0x0D, 0xFF, 0x13, 0x0F, 0x00, 0xFF, 0xDF, 0x07, 0x00}
	dateTime = DlmsDateTimeFromBytes(b)
	t.Logf("dateTime: %s", dateTime.PrintDateTime())
}
