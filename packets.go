package gocosem

var (
	reqSNRM = []byte{
		0x7E, 0xA0, 0x07, 0x03, 0x03, 0x93, 0x8C, 0x11,
		0x7E,
	}
	repSNRM = []byte{
		0x7E, 0xA0, 0x20, 0x03, 0x03, 0x73, 0xF0, 0x2E,
		0x81, 0x80, 0x14, 0x05, 0x02, 0x00, 0xEF, 0x06,
		0x02, 0x00, 0xEF, 0x07, 0x04, 0x00, 0x00, 0x00,
		0x01, 0x08, 0x04, 0x00, 0x00, 0x00, 0x01, 0x07,
		0x4B, 0x7E,
	}
	reqAARQ = []byte{
		0x7E, 0xA0, 0x44, 0x03, 0x03, 0x10, 0x65, 0x94,
		0xE6, 0xE6, 0x00, 0x60, 0x36, 0xA1, 0x09, 0x06,
		0x07, 0x60, 0x85, 0x74, 0x05, 0x08, 0x01, 0x01,
		0x8A, 0x02, 0x07, 0x80, 0x8B, 0x07, 0x60, 0x85,
		0x74, 0x05, 0x08, 0x02, 0x01, 0xAC, 0x0A, 0x80,
		0x08, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
		0x38, 0xBE, 0x10, 0x04, 0x0E, 0x01, 0x00, 0x00,
		0x00, 0x06, 0x5F, 0x1F, 0x04, 0x00, 0xFF, 0xFF,
		0xFF, 0x02, 0x00, 0xA5, 0xD9, 0x7E,
	}
	repAARQ = []byte{
		0x7E, 0xA0, 0x37, 0x03, 0x03, 0x30, 0xEF, 0xCA,
		0xE6, 0xE7, 0x00, 0x61, 0x29, 0xA1, 0x09, 0x06,
		0x07, 0x60, 0x85, 0x74, 0x05, 0x08, 0x01, 0x01,
		0xA2, 0x03, 0x02, 0x01, 0x00, 0xA3, 0x05, 0xA1,
		0x03, 0x02, 0x01, 0x00, 0xBE, 0x10, 0x04, 0x0E,
		0x08, 0x00, 0x06, 0x5F, 0x1F, 0x04, 0x00, 0x00,
		0xFE, 0x1D, 0x00, 0xEF, 0x00, 0x07, 0x79, 0x15,
		0x7E,
	}
	reqSerialNum = []byte{
		0x7E, 0xA0, 0x19, 0x03, 0x03, 0x32, 0xEC, 0xC8,
		0xE6, 0xE6, 0x00, 0xC0, 0x01, 0xC1, 0x00, 0x01,
		0x00, 0x00, 0x60, 0x01, 0x00, 0xFF, 0x02, 0x00,
		0x89, 0xA0, 0x7E,
	}
	repSerialNum = []byte{
		0x7E, 0xA0, 0x1A, 0x03, 0x03, 0x52, 0x27, 0x8E,
		0xE6, 0xE7, 0x00, 0xC4, 0x01, 0xC1, 0x00, 0x09,
		0x08,
	}
	reqDISC = []byte{
		0x7E, 0xA0, 0x07, 0x03, 0x03, 0x53, 0x80, 0xD7,
		0x7E,
	}
	repDISC = []byte{
		0x7E, 0xA0, 0x07, 0x03, 0x03, 0x73, 0x82, 0xF6,
		0x7E,
	}
)

func isSameData(data, comp []byte) bool {
	if len(data) != len(comp) {
		return false
	}
	for i, b := range data {
		if b != comp[i] {
			return false
		}
	}
	return true
}
